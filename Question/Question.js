## Variables, Scopes, and Functions (15 questions):

Explain the difference between var, let, and const keywords. (Common across companies)
What is hoisting? How does it affect variable declaration with var? (Common across companies)
Write a function that takes two numbers as arguments and returns their sum. Use a named function and an anonymous function for the same task. (Basic understanding of functions)
What is the difference between function arguments and parameters? (Understanding function mechanics)
Explain closures in JavaScript. Provide an example. (Advanced concept)
What is the scope of a variable declared inside a function? How can you access variables outside the function's scope? (Understanding function scope)
Differentiate between this keyword inside and outside a function. (Understanding this context)
How can you create private variables within a function using closures? (Advanced closure usage)
Write a function that checks if a given number is even or odd. (Basic function implementation)
Explain the concept of recursion in JavaScript. Provide an example of a recursive function (e.g., factorial). (Advanced function concept)
What is the difference between default parameters and optional arguments in JavaScript? (Function argument handling)
How can you implement function overloading in JavaScript (even though it's not officially supported)? (Advanced function concept)
Explain the concept of first-class functions in JavaScript. (Understanding functions as values)
Write a function that takes an array of numbers and returns a new array with only even numbers. (Function usage with arrays)
Differentiate between function parameters passed by value and by reference in JavaScript. (Understanding parameter passing)

## Events (5 questions):

Explain the different types of events that can be attached to DOM elements. (Event handling basics)
How does event bubbling work in the DOM? (Understanding event propagation)
How can you prevent default behavior for an event like click? (Event handling control)
Explain the difference between addEventListener and attachEvent for attaching event listeners. (Browser compatibility)
How can you implement event delegation to optimize event handling for a large number of elements? (Advanced event handling technique)
## Arrays and Objects (15 questions):

What are the different ways to declare and initialize an array in JavaScript? (Basic array manipulation)
Explain the methods for iterating through an array (e.g., for, forEach, map, etc.). (Common array operations)
How can you remove duplicate elements from an array? (Array manipulation techniques)
Write a function that takes an array of strings and returns a new array with all strings converted to uppercase. (Function usage with arrays)
Explain the difference between sparse and dense arrays in JavaScript. (Understanding array implementation)
What are the different ways to access and modify properties of an object in JavaScript? (Object manipulation basics)
Differentiate between object properties defined with var, let, and const. (Understanding property declaration)
Explain how to iterate through the properties of an object using a for...in loop. (Object property access)
How can you check if a property exists on an object? (Property existence checks)
Write a function that takes an object and returns a new object with all properties in reverse order. (Object manipulation techniques)
Explain the concept of object prototype inheritance in JavaScript. (Understanding object-oriented principles)
Differentiate between hasOwnProperty and in operator for object properties. (Property access control)
How can you create a deep copy of an object in JavaScript? (Object manipulation techniques - advanced)
Explain the concept of destructuring assignment for objects and arrays. (Modern JavaScript syntax)
Write a function that takes two objects and merges them into a new object, handling potential property conflicts. (Object manipulation techniques)
## DOM (10 questions):

Explain the difference between getElementById and getElementsByTagName for accessing DOM elements. (DOM element selection)
How can you manipulate the content and style of a DOM element using JavaScript? (Basic DOM manipulation)
Write a function that takes a selector string and returns the first matching DOM element. (Combining element selection techniques)
Explain the concept of the Document Object Model (DOM) and its role in web development. (Understanding the fundamental structure)
How can you add or remove event listeners from DOM elements dynamically? (Dynamic event handling)
Explain the concept of the DOMContentLoaded event and its use case. (Event handling for page load)
Differentiate between innerHTML, innerText, and textContent for manipulating element content. (Understanding different content manipulation methods)
How can you implement DOM traversal techniques like parentNode, childNodes, and siblings? (Navigating the DOM structure)
Explain the concept of the DOM manipulation API and its common methods (e.g., createElement, appendChild, etc.). (Understanding core DOM manipulation methods)
Write a function that takes a simple HTML string and creates the corresponding DOM elements, appending them to the document body. (Combining DOM manipulation techniques)